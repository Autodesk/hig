defaults: &defaults
  docker:
    - image: circleci/node:8.10-stretch

version: 2
jobs:
  lockfile-update:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install greenkeeper-lockfile
          command: 'sudo yarn global add greenkeeper-lockfile@2'
      - run:
          name: Update lockfile
          command: 'greenkeeper-lockfile-update'
      - save_cache:
          key: v1-lockfile-{{ .Revision }}
          paths:
            # save the git commit
            - ".git"
  lockfile-upload:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: v1-lockfile-{{ .Revision }}
      - run:
          name: Install greenkeeper-lockfile
          command: 'sudo yarn global add greenkeeper-lockfile@2'
      - run:
          name: SSH Avoid hosts unknown
          command: 'mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config'
      - run:
          name: Upload lockfile changes
          command: 'greenkeeper-lockfile-upload'
  bootstrap:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create dependency hash
          command: yarn run create-dependency-hash
      - restore_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
      - run:
          name: Extract dependencies
          command: yarn run extract:dependencies
      - run:
          name: Install Dependencies
          command: yarn
      - run:
          name: Archive dependencies
          command: yarn run archive:dependencies
      - save_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
          paths:
            - .archives/dependencies.tgz
  package-build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create dependency hash
          command: yarn run create-dependency-hash
      - restore_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
      - run:
          name: Extract dependencies
          command: yarn run extract:dependencies
      - run:
          name: Build all packages
          command: yarn build
      - run:
          name: Archive builds
          command: yarn run archive:builds
      - save_cache:
          key: v1-package-builds-{{ .Revision }}
          paths:
            - .archives/builds.tgz
  react-test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create dependency hash
          command: yarn run create-dependency-hash
      - restore_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
      - restore_cache:
          key: v1-package-builds-{{ .Revision }}
      - run:
          name: Extract dependencies and builds
          command: yarn run extract
      - run:
          name: Lint (React)
          command: yarn lint
      - run:
          name: Run Jest Tests
          command: yarn test-ci
      - store_artifacts:
          path: packages/storybook/coverage
#   visual-test:
#     <<: *defaults
#     steps:
#       - checkout
#       - run:
#           name: Create dependency hash
#           command: yarn run create-dependency-hash
#       - restore_cache:
#           key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
#       - restore_cache:
#           key: v1-package-builds-{{ .Revision }}
#       - run:
#           name: Extract dependencies and builds
#           command: yarn run extract
#       - run:
#           name: Build Test Storybook Server
#           command: yarn storybook-test-build
#           working_directory: packages/storybook
#       - run:
#           name: Serve Test Storybook
#           command: yarn storybook-test-serve
#           background: true
#           working_directory: packages/storybook
#       - run:
#           name: Run Visual Regression Tests
#           command: yarn gemini-ci
#           working_directory: packages/storybook
#       - store_artifacts:
#           path: packages/storybook/gemini-report
  canary-packages-deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create dependency hash
          command: yarn run create-dependency-hash
      - restore_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
      - restore_cache:
          key: v1-package-builds-{{ .Revision }}
      - run:
          name: Extract dependencies and builds
          command: yarn run extract
      - run:
          name: Add auth token
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Deploy pre-release versions of packages
          command: yarn publish-canary
  storybook-branch-deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create dependency hash
          command: yarn run create-dependency-hash
      - restore_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
      - restore_cache:
          key: v1-package-builds-{{ .Revision }}
      - run:
          name: Extract dependencies and builds
          command: yarn run extract
      - run:
          name: Deploy Storybook
          command: yarn storybook-deploy-ci
          working_directory: packages/storybook
  packages-deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create dependency hash
          command: yarn run create-dependency-hash
      - restore_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
      - restore_cache:
          key: v1-package-builds-{{ .Revision }}
      - run:
          name: Extract dependencies and builds
          command: yarn run extract
      - run:
          name: Add auth token
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Release
          command: yarn run release
  post-release:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Post release
          command: yarn run post-release
workflows:
  version: 2
  build-test-validate-and-deploy:
    jobs:
      - lockfile-update
      - bootstrap:
          requires:
            - lockfile-update
      - package-build:
          requires:
            - bootstrap
      - react-test:
          requires:
            - package-build
    #   - visual-test:
    #       requires:
    #         - package-build
      - lockfile-upload:
          requires:
            - react-test
            # - visual-test
      - canary-packages-deploy:
          filters:
            branches:
              only:
                - /canary-.*/
          requires:
            - react-test
            # - visual-test
      - storybook-branch-deploy:
          filters:
            branches:
              ignore:
                - development
                - master
          requires:
            - react-test
            # - visual-test
      - packages-deploy:
          requires:
            - react-test
            # - visual-test
          filters:
            branches:
              only: master
      - post-release:
          requires:
            - packages-deploy
          filters:
            branches:
              only: master
