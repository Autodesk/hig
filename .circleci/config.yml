defaults:
  &defaults
  docker:
    - image: cimg/node:16.0.0

version: 2
jobs:
  lockfile-update:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install greenkeeper-lockfile
          command: 'sudo yarn global add greenkeeper-lockfile@2'
      - run:
          name: Update lockfile
          command: 'greenkeeper-lockfile-update'
      - save_cache:
          key: v1-lockfile-{{ .Revision }}
          paths:
            # save the git commit
            - ".git"
  lockfile-upload:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: v1-lockfile-{{ .Revision }}
      - run:
          name: Install greenkeeper-lockfile
          command: 'sudo yarn global add greenkeeper-lockfile@2'
      - run:
          name: SSH Avoid hosts unknown
          command: 'mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking
            no\n" > ~/.ssh/config'
      - run:
          name: Upload lockfile changes
          command: 'greenkeeper-lockfile-upload'
  bootstrap:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create dependency hash
          command: yarn run create-dependency-hash
      - restore_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
      - run:
          name: Extract dependencies
          command: yarn run extract:dependencies
      - run:
          name: Install Dependencies
          command: yarn
      - run:
          name: Archive dependencies
          command: yarn run archive:dependencies
      - save_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
          paths:
            - .archives/dependencies.tgz
  package-build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create dependency hash
          command: yarn run create-dependency-hash
      - restore_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
      - run:
          name: Extract dependencies
          command: yarn run extract:dependencies
      - run:
          name: Build all packages
          command: yarn build
      - run:
          name: Archive builds
          command: yarn run archive:builds
      - save_cache:
          key: v1-package-builds-{{ .Revision }}
          paths:
            - .archives/builds.tgz
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: macos.m1.medium.gen1
  react-test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create dependency hash
          command: yarn run create-dependency-hash
      - restore_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
      - restore_cache:
          key: v1-package-builds-{{ .Revision }}
      - run:
          name: Extract dependencies and builds
          command: yarn run extract
      - run:
          name: Lint (React)
          command: yarn lint
      - run:
          name: Run Jest Tests
          command: yarn test-ci
      - store_artifacts:
          path: packages/storybook/coverage
  canary-packages-deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create dependency hash
          command: yarn run create-dependency-hash
      - restore_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
      - restore_cache:
          key: v1-package-builds-{{ .Revision }}
      - run:
          name: Extract dependencies and builds
          command: yarn run extract
      - run:
          name: Add auth token
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Deploy pre-release versions of packages
          command: yarn publish-canary
  storybook-branch-deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create dependency hash
          command: yarn run create-dependency-hash
      - restore_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
      - restore_cache:
          key: v1-package-builds-{{ .Revision }}
      - run:
          name: Extract dependencies and builds
          command: yarn run extract
      - run:
          name: Deploy Storybook
          command: yarn storybook-deploy-ci
          no_output_timeout: 20m
          working_directory: packages/storybook
  packages-deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create dependency hash
          command: yarn run create-dependency-hash
      - restore_cache:
          key: v3-dependencies-{{ .Revision }}-{{ checksum ".dependency-hash" }}
      - restore_cache:
          key: v1-package-builds-{{ .Revision }}
      - run:
          name: Extract dependencies and builds
          command: yarn run extract
      - run:
          name: Add auth token
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Release
          command: yarn run release
  post-release:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Post release
          command: yarn run post-release
workflows:
  version: 2
  build-test-validate-and-deploy:
    jobs:
      - lockfile-update
      - bootstrap:
          requires:
            - lockfile-update
      - package-build:
          requires:
            - bootstrap
      - react-test:
          requires:
            - package-build
      - lockfile-upload:
          requires:
            - react-test
      - canary-packages-deploy:
          filters:
            branches:
              only:
                - /canary-.*/
          requires:
            - react-test
      - storybook-branch-deploy:
          filters:
            branches:
              ignore:
                - development
                - master
          requires:
            - react-test
      - packages-deploy:
          requires:
            - react-test
          filters:
            branches:
              only: master
      - post-release:
          requires:
            - packages-deploy
          filters:
            branches:
              only: master
